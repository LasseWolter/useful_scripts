# vim style tmux config
# use C-a, since it's on the home row and easier to hit than C-b
set-option -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix
set -g base-index 1

# Do not show a message in status bar (or activate a bell) if there is activity in another window
set -g activity-action none

# Easy config reload
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

bind-key -r f run-shell "tmux neww ~/.scripts/tmux-sessionizer"
bind-key o choose-session

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `c` to also use copy-pipe
unbind -T copy-mode-vi c 
bind -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi c send-keys -X copy-pipe-and-cancel "xclip -selection c"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"
bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "xclip -in -selection clipboard"

set-option -g default-terminal screen-256color


bind-key : command-prompt
bind-key L clear-history

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Use <prefix> l to clear the screen - C-l is used for pane navigation
bind l send-keys 'C-l'

bind-key space next-window
bind-key -r bspace previous-window
bind-key enter next-layout

bind-key m resize-pane -Z

# create new window(tab) in same directory
bind-key c new-window -c '#{pane_current_path}'

# use vim-like keys for splits
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500
set-window-option -g window-status-current-style fg=magenta

# Status Bar
set-option -g status-interval 1
set-option -g status-style bg=black
set-option -g status-style fg=white
set -g status-left '#[fg=green]#h #[default]'
set -g status-right '%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Status Bar Plugin
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavor 'mocha' # or latte, frappe, macchiato, mocha
set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_middle_separator "█ "
set -g @catppuccin_window_right_separator "█"
set -g @catppuccin_window_number_position "left"

set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W:#{b:pane_current_path}"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W:#{b:pane_current_path}"

set -g @catppuccin_status_modules_right "host date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator ""
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "yes"

# Default window text colour and bg
set -g @catppuccin_window_default_color "#{thm_blue}" # text color
set -g @catppuccin_window_default_background "#{thm_bg}"

# Curren window text colour and bg
set -g @catppuccin_window_current_color "#{thm_orange}" # text color
set -g @catppuccin_window_current_background "#{thm_gray}"

# set -g @catppuccin_directory_text "#{pane_current_path}" -- to dispaly directory in status bar 
set -g @catppuccin_host_text "#(hostname -I | cut -f1 -d ' ')" # -- possibly not reliable due to order of output? 
# set -g @catppuccin_host_text "#(ipconfig getifaddr en0)" -- for windows

set -g @catppuccin_date_time_text "%Y-%m-%d %H:%M:%S"


run '~/.tmux/plugins/tpm/tpm'
